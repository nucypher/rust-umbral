name: umbral-pre

on:
  pull_request:
    paths:
      - "umbral-pre/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: umbral-pre

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.51.0 # MSRV
          - stable
        target:
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      #- run: cp ../../Cargo.lock .. # Use same Cargo.lock resolution that's checked in
      - run: cargo build --release --target ${{ matrix.target }}

  build-arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.51.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      #- run: cp ../../Cargo.lock .. # Use same Cargo.lock resolution that's checked in
      - run: cargo build --release --target ${{ matrix.target }} --no-default-features

  build-benchmarks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.51.0 # MSRV
          - stable
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - run: cargo build --all-features --benches

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            rust: 1.51.0 # MSRV
            deps: sudo apt install gcc-multilib
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt install gcc-multilib

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            rust: 1.51.0 # MSRV
          - target: x86_64-unknown-linux-gnu
            rust: stable

    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: ${{ matrix.deps }}
      - run: cargo check --target ${{ matrix.target }} --all-features
      - run: cargo test --release --target ${{ matrix.target }}

  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/tarpaulin@v0.1
        with:
          version: latest
          # Only checking the coverage of the main library,
          # bindings are covered by their language's tests.
          # Also have to exclude `umbral-pre-python` explicitly,
          # since it cannot be compiled for testing
          # (https://github.com/PyO3/pyo3/issues/340)
          args: --exclude-files umbral-pre-wasm/** --exclude-files umbral-pre-python/** --workspace --exclude umbral-pre-python --all-features -- --test-threads 1
      - uses: codecov/codecov-action@v1
      - uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  build-linux-wheels:
    runs-on: ubuntu-latest
    container:
      image: dockcross/manylinux2014-x64
      options: "-v `pwd`/..:/io"
    steps:
      - name:  "build the wheels"
        run:  |
          /io/umbral-pre-python/build-wheels.sh
